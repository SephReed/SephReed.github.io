{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pa",
				"padding"
			],
			[
				"backg",
				"background-position"
			],
			[
				"pad",
				"padding-right"
			],
			[
				"margin-",
				"margin-bottom"
			],
			[
				"no",
				"no-repeat"
			],
			[
				"box",
				"box-shadow"
			],
			[
				"hair",
				"hairType"
			],
			[
				"co",
				"color"
			],
			[
				"min",
				"min-height"
			],
			[
				"mar",
				"margin-left"
			],
			[
				"inline",
				"inline-block"
			],
			[
				"font-s",
				"font-size"
			],
			[
				"cal",
				"calculateColumns"
			],
			[
				"ran",
				"randWindNum"
			],
			[
				"ra",
				"randWindNum"
			],
			[
				"wind",
				"windDxt"
			],
			[
				"an",
				"animation-direction"
			],
			[
				"dr",
				"drawBubblesRequest"
			],
			[
				"bub",
				"bubbles"
			],
			[
				"h",
				"height"
			],
			[
				"le",
				"length"
			],
			[
				"max",
				"max-width"
			],
			[
				"border-bo",
				"border-bottom-style"
			],
			[
				"border-co",
				"border-color"
			],
			[
				"y",
				"yNow"
			],
			[
				"M",
				"MGMT"
			],
			[
				"gr",
				"group"
			],
			[
				"group",
				"groups"
			],
			[
				"be",
				"beginPath"
			],
			[
				"unk",
				"unknown_person"
			],
			[
				"create",
				"createElement"
			],
			[
				"app",
				"appStat"
			],
			[
				"fi",
				"fillStyle"
			],
			[
				"o",
				"opps"
			],
			[
				"tra",
				"transition-timing-function"
			],
			[
				"tr",
				"transition-duration"
			],
			[
				"card",
				"cardHeaderFont"
			],
			[
				"creat",
				"createElement"
			],
			[
				"wid",
				"width"
			],
			[
				"App",
				"ApplicantGUI"
			],
			[
				"A",
				"ApplicantGUI"
			],
			[
				"v",
				"vertical-align"
			],
			[
				"car",
				"cardsOfType"
			],
			[
				"do",
				"domNode"
			],
			[
				"rot",
				"rotation"
			],
			[
				"back",
				"background-color"
			],
			[
				"in",
				"inherit"
			],
			[
				"last",
				"lastX"
			],
			[
				"sk",
				"skewQuad"
			],
			[
				"dx",
				"dxPerFrame"
			],
			[
				"size",
				"sizeDots"
			],
			[
				"dy",
				"dying"
			],
			[
				"r",
				"random"
			],
			[
				"cla",
				"classList"
			],
			[
				"wi",
				"width"
			],
			[
				"d",
				"display"
			],
			[
				"po",
				"position"
			],
			[
				"color",
				"colorModeChooser"
			],
			[
				"va",
				"var"
			],
			[
				"sa",
				"saturation"
			],
			[
				"get",
				"getNextColor"
			],
			[
				"sat",
				"saturationChange"
			],
			[
				"hu",
				"hueChange"
			],
			[
				"spl",
				"splatters"
			],
			[
				"sp",
				"splat"
			],
			[
				"splatt",
				"splatters"
			],
			[
				"las",
				"lastY"
			],
			[
				"re",
				"requestAnimationFrame"
			],
			[
				"fil",
				"fillRect"
			],
			[
				"bu",
				"bubble"
			],
			[
				"dra",
				"drawBubbles"
			],
			[
				"pi",
				"painter"
			],
			[
				"x",
				"xNow"
			],
			[
				"draw",
				"drawLine"
			],
			[
				"cur",
				"currentSize"
			],
			[
				"nex",
				"nextY"
			],
			[
				"next",
				"nextX"
			],
			[
				"fa",
				"fadeOut"
			],
			[
				"time",
				"timedOut"
			],
			[
				"la",
				"lastPoint"
			],
			[
				"he",
				"height"
			],
			[
				"a",
				"addMe"
			],
			[
				"fu",
				"function"
			],
			[
				"padd",
				"padding"
			],
			[
				"border-st",
				"border-right-style"
			],
			[
				"text-a",
				"text-align"
			],
			[
				"font-",
				"font-size"
			],
			[
				"ma",
				"margin"
			],
			[
				"di",
				"display"
			],
			[
				"rout",
				"routeGraph"
			],
			[
				"ste",
				"stepsNode"
			],
			[
				"step",
				"stepByStep"
			],
			[
				"enu",
				"enumDecoder"
			],
			[
				"ca",
				"canvas"
			],
			[
				"op",
				"options"
			],
			[
				"un",
				"undefined"
			],
			[
				"n",
				"nextNode"
			],
			[
				"pat",
				"paths"
			],
			[
				"star",
				"startNode"
			],
			[
				"not",
				"notBackwards"
			],
			[
				"sta",
				"startNode"
			],
			[
				"ch",
				"choices"
			],
			[
				"find",
				"findFastestRoute"
			],
			[
				"of",
				"offset"
			],
			[
				"Ro",
				"RouteGraph"
			],
			[
				"ndoe",
				"nodeIsUseful"
			],
			[
				"check",
				"checkMe"
			],
			[
				"nod",
				"nextNodePromises"
			],
			[
				"pro",
				"promiseNode"
			],
			[
				"tmp",
				"tmpUseful"
			],
			[
				"res",
				"resolve"
			],
			[
				"route",
				"routeGraph"
			],
			[
				"node",
				"nodeIsUseful"
			],
			[
				"lis",
				"listener"
			],
			[
				"rou",
				"routes"
			],
			[
				"che",
				"checkMe"
			],
			[
				"for",
				"forEach"
			],
			[
				"B",
				"Block"
			],
			[
				"is",
				"isUseful"
			],
			[
				"ex",
				"exits"
			],
			[
				"ta",
				"targetCol"
			],
			[
				"targ",
				"targetRow"
			],
			[
				"target",
				"targetCol"
			],
			[
				"dir",
				"dirEnum"
			],
			[
				"blo",
				"block"
			],
			[
				"num",
				"numExits"
			],
			[
				"tex",
				"textOffsetY"
			],
			[
				"bl",
				"blockValue"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Playa_Met/index.html",
			"settings":
			{
				"buffer_size": 2634,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "**Description:** A safe place of sanity, where people can quit trying to pretend they're holier than though (even if they are) and just admit that humanity is broken from the bottom up and that includes each and every one of us.  No system will fix this, no president, no movement.  We have different opinions, that's okay.  You're okay.  We're okay. Even if we're monsters.\n\n\n\n---------------------------------\n**Rules/Bannable Offenses:**\n---------------------------------\n\n**Overview:** This is meant to be something of a safe space, not in the sense that we can't outright state our horribly monstrous self-righteous opinions, but in the sense that there is no right or wrong, except to lie or argue without making it apparent you know you're being a dick.\n\n**Modding Style:** Mods aren't here to be dicks.  You'll probably get a warning before a ban, but maybe not.  If mods are power tripping, message Thumbz8.\n\n**Having unintentional arguments:**\n>*tl;dr We're all monsters every day, the least we could do is disengage from fighting once in a while, or at least make it apparent we know we are.*  \n> If you're going to argue, you have to preface it with this text exactly: **\"I THINK I'M BETTER THAN OTHER PEOPLE AND WILL NOW ATTEMPT TO FORCE MY VIEWS ON TO OTHERS.\"**  Beyond this initial statement, feel free to argue as much as you want.  Prior to this statement, anything that crosses the line from curious discussion to aggressive debate will get you kicked.  In short: instead of telling people what you think, ask what they think.  If you can lead them to their own fallacy without being a dick about it, fine.  If you're someone being asked leading questions, feel free to say you just feel like having your own equally shitty opinion, and call **\"TRUCE.\"**  All \"TRUCE\" must be respected.\n\n**Anti Advertisement/Pop Culture safe space**\n\n> Don't shill here, don't make a new thread about some pop culture bull shit that's happening at the moment.  If you really want to talk about some pop culture garbage, check the \"Weekly Trash Hole\" post for a thread about it.  But seriously, outside of the trash hole, don't post about whatever stupid hashtag is already trending literally everywhere on the internet.  We're being brainwashed into thinking this stuff matters enough as it is, this one space is meant to be safe.  Alternatively, **instead of posting and talking about a topic everyone else is, post about things you find interesting.**  Literally anything.  Many of us just want to have an honest conversation about something that's somewhat interesting, instead of the constant over-hyped positive/negative hysteria that's so ubiquitous.\n\n**Be yourself, speak directly**\n\n>If you want to play a character, preface it with **\"AS CHARACTER [desc]\"**.  It's fun to play characters online, but it can also be an obnoxious facade for everyone else trying to figure out if you're being real/honest or not.  So, if you're trying to play, just state it early.  Tell people what character you're playing, and perhaps they'll join in.  Similarly, sarcasm is extra work for people.  If you're being sarcastic, please don't.  But if you absolutely must to be yourself, add the **\"/s\"**.  \n\n\n\n\n\n\nDon't shill, don't post about pop culture trending crap, don't be aggressive with your text, and admit it: you're the same shitty beast as everyone else on the inside.",
			"file": "Writing/Subreddit_were_all_monsters.txt",
			"file_size": 3217,
			"file_write_time": 131574057090000000,
			"settings":
			{
				"buffer_size": 3372,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Inktober/INKY.js",
			"settings":
			{
				"buffer_size": 3277,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"Pac",
				"Preferences: Browse Packages"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/seph/Code/Web/SephReed.github.io",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober",
		"/Users/seph/Code/Web/SephReed.github.io/Playa_Met",
		"/Users/seph/Code/Web/SephReed.github.io/public",
		"/Users/seph/Code/Web/SephReed.github.io/public/images",
		"/Users/seph/Code/Web/SephReed.github.io/Writing"
	],
	"file_history":
	[
		"/Users/seph/Code/Web/SephReed.github.io/DaFT_2018/proposal.html",
		"/Users/seph/Code/Web/SephReed.github.io/Writing/divergent_overlap.html",
		"/Users/seph/Code/Web/SephReed.github.io/portfolio/index.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/needles/flowColumns.html",
		"/Users/seph/Code/Web/SephReed.github.io/portfolio/portfolio_fabrication.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/PINE_Core_4.8.js",
		"/Users/seph/Code/Web/SephReed.github.io/portfolio/public/css/well_conditioned_lover.css",
		"/Users/seph/Code/Web/SephReed.github.io/portfolio/portfolio.css",
		"/Users/seph/Code/Web/SephReed.github.io/portfolio/portfolio_digital_art.html",
		"/Users/seph/Code/Web/SephReed.github.io/Writing/sol.txt",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/tools/ELATE_test.html",
		"/Users/seph/Code/Web/SephReed.github.io/portfolio/portfolio_coding.html",
		"/Users/seph/Code/Web/SephReed.github.io/DaFT_2018/budget_calc.js",
		"/Users/seph/Desktop/Gmail-SlowSaltyDeath.txt",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/tools/ELATE_basics.js",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/tools/ELATE.js",
		"/Users/seph/Code/Web/SephReed.github.io/Playwood_Palace/index.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/WebFileBridge.js",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober/17-10-12_Shattered.html",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober/Shattered.js",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober/bubbleClick.js",
		"/Users/seph/Code/Web/SephReed.github.io/Netrunner/index.html",
		"/Users/seph/Code/Web/SephReed.github.io/Netrunner/public/css/index.css",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober/INKY.js",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober/17-10-03_Poison.html",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober/17-10-09_Screech.html",
		"/Users/seph/Code/Web/SephReed.github.io/Start_Up/index.html",
		"/Users/seph/Code/Web/SephReed.github.io/Start_Up/SYNE_opportunities.js",
		"/Users/seph/Code/Web/SephReed.github.io/Start_Up/SYNE.js",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/PINE_Var.js",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/PINE_Needles.js",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober/17-10-04_UnderWater.html",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober/INKY_ControlPanel.css",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober/17-10-06_Sword.html",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober/17-10-07_Shy.html",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober/17-10-05_Long.html",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober/index.html",
		"/Users/seph/Code/Web/SephReed.github.io/fun/rainbowTrails.html",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober/17-10-02_Divided.html",
		"/Users/seph/Code/Web/SephReed.github.io/Inktober/17-10-08_Crooked.html",
		"/Users/seph/Code/Web/SephReed.github.io/fun/index.html",
		"/Users/seph/Code/Web/SephReed.github.io/Writing/to_change.html",
		"/Users/seph/Code/Web/SephReed.github.io/Writing/shalena.html",
		"/Users/seph/Code/Web/SephReed.github.io/Writing/hitler_vs_followers.txt",
		"/Users/seph/Code/Web/SephReed.github.io/Video_Essays/First_Test/LearnSomethingNew(2).txt",
		"/Users/seph/Code/Web/SephReed.github.io/portfolio/cover_letter.html",
		"/Users/seph/Code/Web/SephReed.github.io/Challenges/SparkCognitionMaze/index.html",
		"/Users/seph/Code/Web/SephReed.github.io/Writing/not_equal.txt",
		"/Users/seph/Code/Web/SephReed.github.io/Writing/core.txt",
		"/Users/seph/Code/Web/SephReed.github.io/Challenges/SparkCognitionMaze/mazeDecoder.js",
		"/Users/seph/Code/Web/SephReed.github.io/Challenges/SparkCognitionMaze/mazes.txt",
		"/Users/seph/Code/Web/SephReed.github.io/Challenges/SparkCognitionDataScienceAssignment/index.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/guiModules/ChipPallette.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/guiModules/CanvasStackUIs.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/guiModules/CanvasStack.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/EditorUI.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/index.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/guiModules/ChipDrawTools.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/guiModules/CanvasStackToolbar.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/LogicalResources.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/VisualResources.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/basicInterfaces.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/guiModules/ResourceBrowser.html",
		"/Users/seph/Code/Web/SephReed.github.io/SparkCognitionDataScienceAssignment/marketing_training.csv",
		"/Users/seph/Code/Web/SephReed.github.io/SparkCognitionDataScienceAssignment/csvParser.js",
		"/Users/seph/Code/Web/SephReed.github.io/SparkCognitionDataScienceAssignment/deliverables.html",
		"/Users/seph/Code/Web/SephReed.github.io/SparkCognitionDataScienceAssignment/index.html",
		"/Users/seph/Code/Web/SephReed.github.io/SparkCognitionDataScienceAssignment/findLinks.js",
		"/Users/seph/Code/Web/SephReed.github.io/SparkCognitionDataScienceAssignment/marketing_test.csv",
		"/Users/seph/Code/Web/SephReed.github.io/portfolio/space.js",
		"/Users/seph/Code/Web/SephReed.github.io/portfolio/thumbz_symbol.js",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/tests/cloneVsInnerHTML.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/tests/inheritanceTest.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/tests/foo.html",
		"/Users/seph/Code/Web/SephReed.github.io/btc_miner/index.html",
		"/Users/seph/Code/Web/SephReed.github.io/portfolio/portfolio.js",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/PINE_Loadbar.js",
		"/Users/seph/Code/Web/SephReed.github.io/portfolio/portfolio_needles.js",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/needles/bgimg.html",
		"/Users/seph/Code/Web/SephReed.github.io/portfolio/portfolio_contact.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/index.css",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/needles/fileBrowser.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/FLAT.js",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/Resources.html",
		"/Users/seph/Code/Web/SephReed.github.io/DaFT_2017/Docs/joist_jig~.skp",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/appPkg/test/test.flat-project.json",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/DrawTools.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/appPkg/index.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/appPkg/test/maps/startMap/untitled.chip-layer.json",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/appPkg/test/maps/startMap/startMap.map-file.json",
		"/Users/seph/Code/Web/SephReed.github.io/public/js/UTF-Helper.js",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/ServerFileBridge.js",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/needles/resizeHandle.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/needles/selectableList.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/needles/tether.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/needles/easyStyleVar.js",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/PINE_StyleVars.js",
		"/Users/seph/Code/Web/SephReed.github.io/RobotSoul/RobotSoul.js",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/guiModules/canvasStack.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/World.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/Pallette.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/Options.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/FlatUI.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/Tools.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/Draw.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/FlatGUI.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/WorldEditor.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/FlatTUI.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/tools/ELATE_old.js",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/needles/sequencer.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/webAppBridge.js",
		"/Users/seph/Code/Web/SephReed.github.io/index.html",
		"/Users/seph/Code/Web/SephReed.github.io/disqus/index.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/needles/tempFeedback.html",
		"/Users/seph/Code/Web/SephReed.github.io/disqus/requestHotkeyPriority.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/needles/modal.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/needles/hotkeys.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/legacy/hotkeysOld.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/needles/showHide.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/noPine/vanilla_PINE_Styles.js",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/needles/fileChooser.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/tests/test_spawner.html",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/legacy/PINE_Needles_3.0.js",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/PINE_Includes.js",
		"/Users/seph/Code/Web/SephReed.github.io/CryptoChallenges/CryptoTools.js",
		"/Users/seph/Code/Web/SephReed.github.io/portfolio/old_stuff/portfolio.html",
		"/Users/seph/Code/Web/SephReed.github.io/FlatStory/ResizeSensor.js",
		"/Users/seph/Code/Web/SephReed.github.io/PINE/needles/gallery.html"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/seph/Code/Web/SephReed.github.io/portfolio",
			"/Users/seph/Code/Web/SephReed.github.io/FlatStory",
			"/Users/seph/Code/Web/SephReed.github.io/PINE",
			"/Users/seph/Code/Web/SephReed.github.io/RobotSoul",
			"/Users/seph/Code/Web/SephReed.github.io",
			"/Users/seph/Code/Web/SephReed.github.io/PINE",
			"/Users/seph/Code/Web/SephReed.github.io/CryptoBankingApp",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"project_and",
			"header",
			"APP",
			"_S",
			"dot",
			"</image",
			"<image",
			"-bimg",
			"image",
			"ajax",
			"Ajax",
			"oneUseVal",
			"mine",
			"Tool",
			"thisMode",
			"evolve",
			"this",
			"thisToolset",
			"Displayable",
			"displayable",
			"isCorrectModeFor",
			"CanvasStackMode",
			"*y*",
			"no",
			"yes",
			"relatives",
			"name",
			"currentMean",
			"means",
			"header",
			"popin_over",
			"_newtab",
			"project_and",
			"thumbz",
			"background >",
			"background {",
			"backgrou",
			"thumbz",
			"load",
			"Tween",
			"user",
			"console",
			"user-select",
			"console.log",
			"console",
			"resolved",
			"\"notFound\"",
			"sync",
			"Sync",
			".txt",
			"state",
			"layers",
			"colsWide",
			"rowsTall",
			"pallette",
			"painter",
			"attArg",
			"setVar",
			"isDir",
			"toSaveable",
			"Loadable",
			"Saveable",
			"getnitDir",
			"fileTree",
			"state",
			"console.lo",
			"conso",
			"imple",
			"El.attr",
			"addEvent",
			"map",
			"this.chipsWi",
			"this.chipWidth",
			"this.chipHeight",
			"pallette",
			"targetChipID, allowDiagonals",
			"layer",
			"Draw.Tools.Fill",
			".modes",
			"tool",
			"Pal",
			"ChipSet",
			"Pal",
			"ChipSet",
			"chipSet",
			"ChipMap",
			"PINE.addEvent",
			"PINE.ready",
			"PINE.event",
			"PINE.events",
			"pixel",
			"fullSc",
			"height",
			"width",
			"argsParser",
			"ChipMapping",
			"this.height",
			"this.width",
			"extendedSup",
			"construction",
			"PINE.err",
			"interfaces",
			"constructor",
			"name",
			"createClass",
			"DrawTools",
			"Tools",
			"changeList",
			"ChipMap",
			"PINE",
			"ELATE",
			"ejectM",
			"runScrip",
			"debug.",
			"debug",
			"SyncProm",
			"DrawCanv",
			"chipHeight",
			"chipWidth",
			"baseline",
			"resolved",
			"El.",
			"class.",
			"FLAT",
			"Pal.",
			"world",
			"worldArea",
			"Darken"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"topbar",
			"S",
			"quad",
			"frame",
			"</bimg",
			"<.bimg",
			"<bimg",
			"-image",
			"bimg",
			"THIS",
			"Editable",
			"isCorrectUIFor",
			"CanvasStackUI",
			"no",
			"yes",
			"*y*",
			"relations",
			"factor",
			"currentChunk",
			"chunks",
			"_blank",
			"resolve",
			"BRIDGE.notFound",
			"",
			".json",
			"THIS",
			"colEnd",
			"rowEnd",
			"set",
			"toLoadable",
			"Saveable",
			"Loadable",
			"getnit",
			"THIS",
			"this.chipsWide",
			"this.chipsTall",
			"allowDiagonals, targetChipID",
			"this",
			"chipsTall",
			"chipsWide",
			"parseArgs",
			"ChipLayer",
			"this.chipsTall",
			"this.chipsWide",
			"build",
			"implements",
			"construction",
			"outsClassName",
			"create",
			"Draw.Tools",
			"DrawTools",
			"eventList",
			"chipsTall",
			"chipsWide",
			"",
			"canvasStack",
			"desktop",
			"currentUpdateID",
			"tryOp",
			"var(--panelBorderWidth)",
			"var(--panelBorderColor)",
			"var(--backdropColor)",
			"var(--panelTextColor)",
			"var(--panelBase)",
			"",
			"panelBase",
			"sendMe",
			"",
			"bgImgSrc",
			"palletteArea",
			"Pick",
			"cursorStyling",
			"actionPoint",
			";",
			"tion: 0px",
			", targetID, allowDiagonals);",
			"currentRow, currentCol",
			"row, col",
			"row",
			"mainArea",
			"mouseTrailsFrameRequest",
			"17/Docs",
			"",
			"3D",
			"0.333in",
			"\"",
			"-",
			"galleryGetCurrent",
			"1px 1px",
			"rgba(0,0,0,0.8)",
			"0.5",
			"0.8",
			"0.5",
			"joistNail",
			"nailOneAndHalf",
			"2",
			"sections",
			"<a target=\"_newtab\" ",
			"pineend",
			"view",
			"..",
			"",
			"newInned",
			"oldOuted",
			"Absolute",
			"absolute",
			"",
			"space",
			"ni",
			".syncThen",
			"secondClickExit",
			"job",
			"domNode",
			"needle",
			"PINE",
			"domNode",
			"syncThen",
			"SyncPromise",
			"new SyncPromise",
			"inputs",
			"device",
			"benefactor",
			"templates",
			"save",
			"input",
			".ID",
			"MidiInterval",
			"MidiToInterval"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Playa_Met/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2634,
						"regions":
						{
						},
						"selection":
						[
							[
								804,
								804
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Writing/Subreddit_were_all_monsters.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3372,
						"regions":
						{
						},
						"selection":
						[
							[
								3198,
								3198
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Inktober/INKY.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 3277,
						"regions":
						{
						},
						"selection":
						[
							[
								1582,
								682
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 425.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "github.io.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"por",
				"portfolio/portfolio.css"
			],
			[
				"codi",
				"portfolio/portfolio_coding.html"
			],
			[
				"elate",
				"PINE/tools/ELATE_basics.js"
			],
			[
				"el",
				"PINE/tools/ELATE_test.html"
			],
			[
				"portfolio/ind",
				"portfolio/index.html"
			],
			[
				"coding",
				"portfolio/portfolio_coding.html"
			],
			[
				"pin",
				"PINE/PINE_Core_4.8.js"
			],
			[
				"fabri",
				"portfolio/portfolio_fabrication.html"
			],
			[
				"portfolio_co",
				"portfolio/portfolio_coding.html"
			],
			[
				"play",
				"Playwood_Palace/index.html"
			],
			[
				"port",
				"portfolio/index.html"
			],
			[
				"shatter",
				"Inktober/17-10-12_Shattered.html"
			],
			[
				"flo",
				"PINE/needles/flowColumns.html"
			],
			[
				"bri",
				"FlatStory/WebFileBridge.js"
			],
			[
				"rain",
				"fun/rainbowTrails.html"
			],
			[
				"not",
				"Writing/not_equal.txt"
			],
			[
				"maz",
				"Challenges/SparkCognitionMaze/mazes.txt"
			],
			[
				"bridge",
				"FlatStory/WebFileBridge.js"
			],
			[
				"in",
				"FlatStory/index.html"
			],
			[
				"4.8",
				"PINE/PINE_Core_4.8.js"
			],
			[
				"web",
				"FlatStory/WebFileBridge.js"
			],
			[
				"load",
				"PINE/PINE_Loadbar.js"
			],
			[
				"cod",
				"portfolio/portfolio_coding.html"
			],
			[
				"edi",
				"FlatStory/EditorUI.html"
			],
			[
				"ui",
				"FlatStory/EditorUI.html"
			],
			[
				"inde",
				"FlatStory/index.html"
			],
			[
				"index.css",
				"FlatStory/index.css"
			],
			[
				"index",
				"FlatStory/index.html"
			],
			[
				"pine",
				"PINE/PINE_Core_4.8.js"
			],
			[
				"bgimg",
				"PINE/needles/bgimg.html"
			],
			[
				"basic",
				"FlatStory/basicInterfaces.html"
			],
			[
				"ca",
				"FlatStory/guiModules/CanvasStack.html"
			],
			[
				"vis",
				"FlatStory/VisualResources.html"
			],
			[
				"lo",
				"FlatStory/LogicalResources.html"
			],
			[
				"log",
				"FlatStory/LogicalResources.html"
			],
			[
				"r",
				"FlatStory/Resources.html"
			],
			[
				"f",
				"FlatStory/FLAT.js"
			],
			[
				"skp",
				"DaFT_2017/Docs/joist_jig~.skp"
			],
			[
				"pine_va",
				"PINE/PINE_Var.js"
			],
			[
				"fileb",
				"PINE/needles/fileBrowser.html"
			],
			[
				"canva",
				"FlatStory/guiModules/CanvasStack.html"
			],
			[
				"chipp",
				"FlatStory/guiModules/ChipPallette.html"
			],
			[
				"resour",
				"FlatStory/Resources.html"
			],
			[
				"chip",
				"FlatStory/guiModules/ChipPallette.html"
			],
			[
				"fl",
				"FlatStory/FLAT.js"
			],
			[
				"webf",
				"FlatStory/WebFileBridge.js"
			],
			[
				"fla",
				"FlatStory/FLAT.js"
			],
			[
				"selec",
				"PINE/needles/selectableList.html"
			],
			[
				"file",
				"PINE/needles/fileBrowser.html"
			],
			[
				"resize",
				"PINE/needles/resizeHandle.html"
			],
			[
				"chipdr",
				"FlatStory/guiModules/ChipDrawTools.html"
			],
			[
				"bas",
				"FlatStory/basicInterfaces.html"
			],
			[
				"drawt",
				"FlatStory/guiModules/ChipDrawTools.html"
			],
			[
				"too",
				"FlatStory/guiModules/ChipDrawTools.html"
			],
			[
				"vi",
				"FlatStory/VisualResources.html"
			],
			[
				"drawto",
				"FlatStory/DrawTools.html"
			],
			[
				"pal",
				"FlatStory/guiModules/ChipPallette.html"
			],
			[
				"v",
				"FlatStory/VisualResources.html"
			],
			[
				"eas",
				"PINE/needles/easyStyleVar.js"
			],
			[
				"sty",
				"PINE/PINE_StyleVars.js"
			],
			[
				"easys",
				"PINE/needles/easyStyleVar.js"
			],
			[
				"can",
				"FlatStory/guiModules/CanvasStack.html"
			],
			[
				"canvas",
				"FlatStory/guiModules/CanvasStack.html"
			],
			[
				"filebr",
				"PINE/needles/fileBrowser.html"
			],
			[
				"rob",
				"RobotSoul/RobotSoul.js"
			],
			[
				"re",
				"FlatStory/Resources.html"
			],
			[
				"resou",
				"FlatStory/guiModules/ResourceBrowser.html"
			],
			[
				"res",
				"FlatStory/guiModules/ResourceBrowser.html"
			],
			[
				"index.c",
				"FlatStory/index.css"
			],
			[
				"nee",
				"PINE/PINE_Needles.js"
			],
			[
				"we",
				"FlatStory/webAppBridge.js"
			],
			[
				"e",
				"PINE/tools/ELATE.js"
			],
			[
				"l",
				"FlatStory/LogicalResources.html"
			],
			[
				"indexcss",
				"FlatStory/index.css"
			],
			[
				"ind",
				"FlatStory/index.html"
			],
			[
				"sele",
				"PINE/needles/selectableList.html"
			],
			[
				"visu",
				"FlatStory/VisualResources.html"
			],
			[
				"fi",
				"PINE/needles/fileBrowser.html"
			],
			[
				"flat/in",
				"FlatStory/index.html"
			],
			[
				"elat",
				"PINE/tools/ELATE.js"
			],
			[
				"chipd",
				"FlatStory/guiModules/ChipDrawTools.html"
			],
			[
				"draw",
				"FlatStory/guiModules/ChipDrawTools.html"
			],
			[
				"index.cs",
				"FlatStory/index.css"
			],
			[
				"dra",
				"FlatStory/Draw.html"
			],
			[
				"gui",
				"FlatStory/FlatGUI.html"
			],
			[
				"flat",
				"FlatStory/FLAT.js"
			],
			[
				"flatcss",
				"FlatStory/index.css"
			],
			[
				"ela",
				"PINE/tools/ELATE.js"
			],
			[
				"var",
				"PINE/PINE_Var.js"
			],
			[
				"basics",
				"PINE/tools/ELATE_basics.js"
			],
			[
				"seque",
				"PINE/needles/sequencer.html"
			],
			[
				"flatind",
				"FlatStory/index.html"
			],
			[
				"css",
				"FlatStory/index.css"
			],
			[
				"eid",
				"FlatStory/WorldEditor.html"
			],
			[
				"worl",
				"FlatStory/World.html"
			],
			[
				"t",
				"FlatStory/Tools.html"
			],
			[
				"pall",
				"FlatStory/Pallette.html"
			],
			[
				"wor",
				"FlatStory/World.html"
			],
			[
				"temp",
				"PINE/needles/tempFeedback.html"
			],
			[
				"modal",
				"PINE/needles/modal.html"
			],
			[
				"sho",
				"PINE/needles/showHide.html"
			],
			[
				"to",
				"FlatStory/Tools.html"
			],
			[
				"sel",
				"PINE/needles/selectableList.html"
			],
			[
				"brid",
				"FlatStory/webAppBridge.js"
			],
			[
				"need",
				"PINE/PINE_Needles.js"
			],
			[
				"easy",
				"PINE/needles/easyStyleVar.js"
			],
			[
				"pine_4.8",
				"PINE/PINE_Core_4.8.js"
			],
			[
				"brig",
				"FlatStory/webAppBridge.js"
			],
			[
				"pine_",
				"PINE/PINE_Core_4.8.js"
			],
			[
				"gall",
				"PINE/needles/gallery.html"
			],
			[
				"playind",
				"Playwood_Palace/index.html"
			],
			[
				"colo",
				"DaFT_2017/Docs/Paint_Colors.txt"
			],
			[
				"galle",
				"PINE/needles/gallery.html"
			],
			[
				"portfolio/in",
				"portfolio/index.html"
			],
			[
				"build",
				"DaFT_2017/Docs/buildBook.html"
			],
			[
				"co",
				"DaFT_2017/Docs/Paint_Colors.txt"
			],
			[
				"par",
				"Writing/Paradox_Mentality.html"
			],
			[
				"flowc",
				"PINE/needles/flowColumns.html"
			],
			[
				"drag",
				"PINE/needles/dragArea.html"
			],
			[
				"aes",
				"Digiden/public/js/AES.js"
			],
			[
				"init.",
				"public/css/init.css"
			],
			[
				"effy",
				"Playwood_Palace/effigy.js"
			],
			[
				"pine4.8",
				"PINE/PINE_Core_4.8.js"
			],
			[
				"noo",
				"DaFT_2017/Docs/noob.html"
			],
			[
				"eff",
				"Playwood_Palace/effigy.js"
			],
			[
				"daft",
				"DaFT_2017/index.html"
			],
			[
				"codin",
				"portfolio/portfolio_coding.html"
			],
			[
				"pvar",
				"PINE/PINE_Var.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 259.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
